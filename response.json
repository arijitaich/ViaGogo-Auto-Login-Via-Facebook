ElementHandle {
    _disposed: false,
    _context: ExecutionContext {
      _client: CDPSession {
        eventsMap: [Map],
        emitter: [Object],
        _callbacks: Map(0) {},
        _connection: [Connection],
        _targetType: 'page',
        _sessionId: '31A955494E4A913618AE387A2F26677C'
      },
      _world: DOMWorld {
        _documentPromise: [Promise],
        _contextPromise: [Promise],
        _contextResolveCallback: null,
        _detached: false,
        _waitTasks: Set(0) {},
        _boundFunctions: Map(0) {},
        _ctxBindings: Set(0) {},
        _settingUpBinding: null,
        _frameManager: [FrameManager],
        _frame: [Frame],
        _timeoutSettings: [TimeoutSettings]
      },
      _contextId: 3,
      _contextName: ''
    },
    _client: CDPSession {
      eventsMap: Map(29) {
        'Fetch.requestPaused' => [Array],
        'Fetch.authRequired' => [Array],
        'Network.requestWillBeSent' => [Array],
        'Network.requestServedFromCache' => [Array],
        'Network.responseReceived' => [Array],
        'Network.loadingFinished' => [Array],
        'Network.loadingFailed' => [Array],
        'Page.frameAttached' => [Array],
        'Page.frameNavigated' => [Array],
        'Page.navigatedWithinDocument' => [Array],
        'Page.frameDetached' => [Array],
        'Page.frameStoppedLoading' => [Array],
        'Runtime.executionContextCreated' => [Array],
        'Runtime.executionContextDestroyed' => [Array],
        'Runtime.executionContextsCleared' => [Array],
        'Page.lifecycleEvent' => [Array],
        'Target.attachedToTarget' => [Array],
        'Target.detachedFromTarget' => [Array],
        'Page.domContentEventFired' => [Array],
        'Page.loadEventFired' => [Array],
        'Runtime.consoleAPICalled' => [Array],
        'Runtime.bindingCalled' => [Array],
        'Page.javascriptDialogOpening' => [Array],
        'Runtime.exceptionThrown' => [Array],
        'Inspector.targetCrashed' => [Array],
        'Performance.metrics' => [Array],
        'Log.entryAdded' => [Array],
        'Page.fileChooserOpened' => [Array],
        Symbol(CDPSession.Disconnected) => []
      },
      emitter: {
        all: [Map],
        on: [Function: on],
        off: [Function: off],
        emit: [Function: emit]
      },
      _callbacks: Map(0) {},
      _connection: Connection {
        eventsMap: [Map],
        emitter: [Object],
        _lastId: 311,
        _sessions: [Map],
        _closed: false,
        _callbacks: Map(0) {},
        _url: 'ws://127.0.0.1:63130/devtools/browser/5bebe5b2-cbca-408c-928c-0885e5ada2b8',
        _delay: 0,
        _transport: [NodeWebSocketTransport]
      },
      _targetType: 'page',
      _sessionId: '31A955494E4A913618AE387A2F26677C'
    },
    _remoteObject: {
      type: 'object',
      subtype: 'node',
      className: 'HTMLAnchorElement',
      description: 'a.js-event-row-container.el-row-anchor.cGry1',
      objectId: '-1535355680390417941.3.10'
    },
    _page: <ref *1> Page {
      eventsMap: Map(0) {},
      emitter: {
        all: Map(0) {},
        on: [Function: on],
        off: [Function: off],
        emit: [Function: emit]
      },
      _closed: false,
      _timeoutSettings: TimeoutSettings {
        _defaultTimeout: null,
        _defaultNavigationTimeout: null
      },
      _pageBindings: Map(0) {},
      _javascriptEnabled: true,
      _workers: Map(0) {},
      _fileChooserInterceptors: Set(0) {},
      _client: CDPSession {
        eventsMap: [Map],
        emitter: [Object],
        _callbacks: Map(0) {},
        _connection: [Connection],
        _targetType: 'page',
        _sessionId: '31A955494E4A913618AE387A2F26677C'
      },
      _target: Target {
        _targetInfo: [Object],
        _browserContext: [BrowserContext],
        _targetId: '704492C1964146744F1EE2575EF14811',
        _sessionFactory: [Function (anonymous)],
        _ignoreHTTPSErrors: false,
        _defaultViewport: [Object],
        _pagePromise: [Promise],
        _workerPromise: null,
        _initializedCallback: [Function (anonymous)],
        _initializedPromise: [Promise],
        _closedCallback: [Function (anonymous)],
        _isClosedPromise: [Promise],
        _isInitialized: true
      },
      _keyboard: Keyboard {
        _modifiers: 0,
        _pressedKeys: Set(0) {},
        _client: [CDPSession]
      },
      _mouse: Mouse {
        _x: 0,
        _y: 0,
        _button: 'none',
        _client: [CDPSession],
        _keyboard: [Keyboard]
      },
      _touchscreen: Touchscreen { _client: [CDPSession], _keyboard: [Keyboard] },
      _accessibility: Accessibility { _client: [CDPSession] },
      _frameManager: FrameManager {
        eventsMap: [Map],
        emitter: [Object],
        _frames: [Map],
        _contextIdToContext: [Map],
        _isolatedWorlds: [Set],
        _client: [CDPSession],
        _page: [Circular *1],
        _networkManager: [NetworkManager],
        _timeoutSettings: [TimeoutSettings],
        _mainFrame: [Frame]
      },
      _emulationManager: EmulationManager {
        _emulatingMobile: false,
        _hasTouch: false,
        _client: [CDPSession]
      },
      _tracing: Tracing { _recording: false, _path: '', _client: [CDPSession] },
      _coverage: Coverage { _jsCoverage: [JSCoverage], _cssCoverage: [CSSCoverage] },
      _screenshotTaskQueue: ScreenshotTaskQueue { _chain: [Promise] },
      _viewport: { width: 800, height: 600 }
    },
    _frameManager: <ref *2> FrameManager {
      eventsMap: Map(5) {
        Symbol(FrameManager.FrameAttached) => [Array],
        Symbol(FrameManager.FrameDetached) => [Array],
        Symbol(FrameManager.FrameNavigated) => [Array],
        Symbol(FrameManager.LifecycleEvent) => [],
        Symbol(FrameManager.FrameNavigatedWithinDocument) => []
      },
      emitter: {
        all: [Map],
        on: [Function: on],
        off: [Function: off],
        emit: [Function: emit]
      },
      _frames: Map(1) { '704492C1964146744F1EE2575EF14811' => [Frame] },
      _contextIdToContext: Map(2) { 3 => [ExecutionContext], 4 => [ExecutionContext] },
      _isolatedWorlds: Set(1) { '__puppeteer_utility_world__' },
      _client: CDPSession {
        eventsMap: [Map],
        emitter: [Object],
        _callbacks: Map(0) {},
        _connection: [Connection],
        _targetType: 'page',
        _sessionId: '31A955494E4A913618AE387A2F26677C'
      },
      _page: <ref *1> Page {
        eventsMap: Map(0) {},
        emitter: [Object],
        _closed: false,
        _timeoutSettings: [TimeoutSettings],
        _pageBindings: Map(0) {},
        _javascriptEnabled: true,
        _workers: Map(0) {},
        _fileChooserInterceptors: Set(0) {},
        _client: [CDPSession],
        _target: [Target],
        _keyboard: [Keyboard],
        _mouse: [Mouse],
        _touchscreen: [Touchscreen],
        _accessibility: [Accessibility],
        _frameManager: [Circular *2],
        _emulationManager: [EmulationManager],
        _tracing: [Tracing],
        _coverage: [Coverage],
        _screenshotTaskQueue: [ScreenshotTaskQueue],
        _viewport: [Object]
      },
      _networkManager: NetworkManager {
        eventsMap: [Map],
        emitter: [Object],
        _requestIdToRequest: [Map],
        _requestIdToRequestWillBeSentEvent: Map(0) {},
        _extraHTTPHeaders: {},
        _credentials: null,
        _attemptedAuthentications: Set(0) {},
        _userRequestInterceptionEnabled: false,
        _userRequestInterceptionCacheSafe: false,
        _protocolRequestInterceptionEnabled: false,
        _userCacheDisabled: false,
        _requestIdToInterceptionId: Map(0) {},
        _emulatedNetworkConditions: [Object],
        _client: [CDPSession],
        _ignoreHTTPSErrors: false,
        _frameManager: [Circular *2]
      },
      _timeoutSettings: TimeoutSettings {
        _defaultTimeout: null,
        _defaultNavigationTimeout: null
      },
      _mainFrame: Frame {
        _url: 'https://www.viagogo.co.uk/Festival-Tickets/UK-Festivals/Reading-and-Leeds-Festival-Tickets',
        _detached: false,
        _loaderId: '109F6CAD2EFCC163F9CE969FE295F03E',
        _lifecycleEvents: [Set],
        _frameManager: [Circular *2],
        _parentFrame: null,
        _id: '704492C1964146744F1EE2575EF14811',
        _mainWorld: [DOMWorld],
        _secondaryWorld: [DOMWorld],
        _childFrames: Set(0) {},
        _name: undefined
      }
    }
  }